plugins {
    id 'com.android.application'
}

apply from: 'get-version.gradle'

def keystorePropertiesFile = rootProject.file("0_personal/keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    compileSdkVersion 33
    buildToolsVersion "33.0.0"
    ndkVersion "25.1.8937393"

    defaultConfig {
        applicationId "com.exifthumbnailadder.app"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode finalVersionCode
        versionName finalVersionName
//        versionCode 381
//        versionName "0.9.16.1"

        file("../version_last_tag.txt").text = "version: " + lastTagVersionName + "+" + lastTagVersionCode
        //file("../version_head.txt").text = "version: " + finalVersionName + "+" + finalVersionCode

        // Add version to APK name
        if (project.hasProperty("noVersionInArchivesBaseName") && noVersionInArchivesBaseName == "true") {
            // APK name used in screengrab to build screenshots with fastlane is hardcoded
            // so we don't want the version no in the apk file
            setProperty("archivesBaseName", "exifthumbnailadder")
        } else {
            setProperty("archivesBaseName", "exifthumbnailadder-$versionName")
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        testOptions {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }

        // Exclude tests that produce screenshots with screengrab by passing "-PexcludeScreenshots" to the gradlew command
        if (project.hasProperty('excludeScreenshots')) {
            testInstrumentationRunnerArguments('notClass': 'com.exifthumbnailadder.app.TakeScreenshots')
        }

        // No automatic import :( [see: https://stackoverflow.com/a/54105322/15401262]
        buildConfigField "java.util.concurrent.atomic.AtomicBoolean", "IS_SCREENSHOTS", "new java.util.concurrent.atomic.AtomicBoolean(false)"

        externalNativeBuild {
            cmake {
//                abiFilters 'arm64-v8a'
//                abiFilters 'armeabi-v7a'
//                abiFilters 'x86'
//                abiFilters 'x86_64'

                if (project.hasProperty('usePrebuiltLib') && usePrebuiltLib == "true") {
                    arguments "-DUSE_PREBUILT_LIB=TRUE"
                }
            }
        }
    }

    signingConfigs {
        release {
            if (! keystoreProperties.isEmpty()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (keystoreProperties.isEmpty()) {
                System.err.println("keystore.properties file missing. 'Release' build will be unsigned.");
            } else {
                signingConfig signingConfigs.release
            }

            packagingOptions {
                //exclude 'doc/**'        // coming from pixymeta-android.jar
                //exclude 'changelog.txt' // coming from pixymeta-android.jar
            }
        }
        debug {
            applicationIdSuffix ".debug"
            //minifyEnabled true
            //shrinkResources true

            aaptOptions {
                //ignoreAssetsPattern '!**/doc:!**/changelog.txt'
            }
            packagingOptions {
                //exclude 'doc/**'        // coming from pixymeta-android.jar
                //exclude 'changelog.txt' // coming from pixymeta-android.jar
            }
        }
    }

    flavorDimensions "version"
    productFlavors {
        standard {
            getIsDefault().set(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            version "3.22.1"
            path file('../CMakeLists.txt')
        }
    }
    namespace 'com.exifthumbnailadder.app'
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment:1.5.5'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'androidx.exifinterface:exifinterface:1.3.5'
    implementation 'androidx.wear:wear:1.2.0'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation project(path: ':library:Android-Exif-Extended')
    implementation project(path: ':library:pixymeta-android')
    //implementation files('libs/*.jar')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'androidx.work:work-testing:2.7.1'
    androidTestImplementation 'tools.fastlane:screengrab:2.1.1'
    androidTestUtil 'androidx.test:orchestrator:1.4.2'
    compileOnly 'com.google.android.wearable:wearable:2.9.0'

}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}
