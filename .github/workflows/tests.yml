name: ETA tests
on: [push, pull_request]
jobs:

  test:
    #continue-on-error: true
    env:
      with_avd_cache: true
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [26, 27, 28, 29, 30, 31]
        #target: [default, google_apis] #Keep only 1 target until https://github.com/ReactiveCircus/android-emulator-runner/issues/278 is fixed
        target: [google_apis]
        include:
          - arch: x86
          - ram-size: 3072M
# Re-enable below when default target is enabled again
#          - api-level: 30
#            target: default
#            arch: x86_64
          - api-level: 31
            arch: x86_64
          - api-level: 32
            target: google_apis
            arch: x86_64
            ram-size: 3072M
          - api-level: 33
            target: google_apis
            arch: x86_64
            ram-size: 3072M

    steps:
      - name: checkout
        uses: actions/checkout@v3

      # Switch to java 11 since AGP requires java 11
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        if: ${{ env.with_avd_cache == 'true' }}
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}

      - name: create AVD and generate snapshot for caching (${{ matrix.api-level }}, ${{ matrix.target }}, ${{ matrix.arch }})
        if: ${{ env.with_avd_cache == 'true' &&  steps.avd-cache.outputs.cache-hit != 'true' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          ram-size: ${{ matrix.ram-size }}
          heap-size: 512M
          disk-size: 8G
          sdcard-path-or-size: 200M
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests with avd cache (${{ matrix.api-level }}, ${{ matrix.target }}, ${{ matrix.arch }})
        if: ${{ env.with_avd_cache == 'true' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          ram-size: ${{ matrix.ram-size }}
          heap-size: 512M
          disk-size: 8G
          sdcard-path-or-size: 200M
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: fastlane connectedCheck

      - name: run tests without avd cache (${{ matrix.api-level }}, ${{ matrix.target }}, ${{ matrix.arch }})
        if: ${{ env.with_avd_cache != 'true' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          ram-size: ${{ matrix.ram-size }}
          heap-size: 512M
          disk-size: 8G
          sdcard-path-or-size: 200M
          script: fastlane connectedCheck_with_screenrecord

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}
          path: app/build/reports/
